
@noinline __throw_absent_groebner_engine() = throw(
    """Groebner bases engine is required. Execute `using Groebner` to enable this functionality.""")

"""
    groebner_basis(polynomials)

Computes a Groebner basis of the ideal generated by the given `polynomials`.

This function requires a Groebner bases backend (such as Groebner.jl) to be loaded.
"""
function groebner_basis(args; kwargs...)
    __throw_absent_groebner_engine()
end

"""
    groebner_basis(polynomials)

Checks whether the given `polynomials` forms a Groebner basis.

This function requires a Groebner bases backend (such as Groebner.jl) to be loaded.
"""
function is_groebner_basis(args; kwargs...)
    __throw_absent_groebner_engine()
end
